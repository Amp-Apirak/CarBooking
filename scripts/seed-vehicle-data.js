// scripts/seed-vehicle-data.js
// ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö vehicle types ‡πÅ‡∏•‡∏∞ brands

require("dotenv").config();
const db = require("../config/db");
const { v4: uuidv4 } = require("uuid");

async function seedVehicleData() {
  try {
    console.log("üå± ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...");

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const [existingTypes] = await db.query("SELECT COUNT(*) as count FROM vehicle_types");
    const [existingBrands] = await db.query("SELECT COUNT(*) as count FROM vehicle_brands");

    if (existingTypes[0].count > 0) {
      console.log("‚úÖ ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• vehicle types ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß");
    } else {
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° vehicle types
      const vehicleTypes = [
        "‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå",
        "‡∏£‡∏ñ‡∏ï‡∏π‡πâ",
        "‡∏£‡∏ñ‡∏ö‡∏£‡∏£‡∏ó‡∏∏‡∏Å",
        "‡∏£‡∏ñ‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå",
        "‡∏£‡∏ñ‡πÇ‡∏î‡∏¢‡∏™‡∏≤‡∏£"
      ];

      for (const typeName of vehicleTypes) {
        const typeId = uuidv4().replace(/-/g, "");
        await db.query(
          "INSERT INTO vehicle_types (type_id, name) VALUES (?, ?)",
          [typeId, typeName]
        );
        console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° vehicle type: ${typeName} (${typeId})`);
      }
    }

    if (existingBrands[0].count > 0) {
      console.log("‚úÖ ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• vehicle brands ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß");
    } else {
      // ‡πÄ‡∏û‡∏¥‡πà‡∏° vehicle brands
      const vehicleBrands = [
        "Toyota",
        "Honda",
        "Nissan",
        "Mazda",
        "Ford",
        "Chevrolet",
        "Isuzu",
        "Mitsubishi"
      ];

      for (const brandName of vehicleBrands) {
        const brandId = uuidv4().replace(/-/g, "");
        await db.query(
          "INSERT INTO vehicle_brands (brand_id, name) VALUES (?, ?)",
          [brandId, brandName]
        );
        console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° vehicle brand: ${brandName} (${brandId})`);
      }
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
    console.log("\nüìã Vehicle Types ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:");
    const [types] = await db.query("SELECT type_id, name FROM vehicle_types");
    types.forEach(type => {
      console.log(`  - ${type.name} (ID: ${type.type_id})`);
    });

    console.log("\nüìã Vehicle Brands ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà:");
    const [brands] = await db.query("SELECT brand_id, name FROM vehicle_brands");
    brands.forEach(brand => {
      console.log(`  - ${brand.name} (ID: ${brand.brand_id})`);
    });

    console.log("\nüéâ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!");

  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
  } finally {
    process.exit(0);
  }
}

seedVehicleData();
